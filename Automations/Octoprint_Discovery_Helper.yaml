blueprint:
  name: Octoprint_Discovery_Helper - 2023-03-14
  author: SirGoodenough
  description: 'This is Blueprint is provided as a helper for people using the
    Octopeint Plugin called [OctoPrint-HomeAssistant](https://github.com/cmroche/OctoPrint-HomeAssistant).
    Within that Plugin there are several suggested Home Assistant Scripts &
    automations, and this will build them all for you.
    

    ðŸ“© There is not an official version control system for Blueprints. However I have
    found something that comes pretty close. It is not perfect, but for **MOST**
    Blueprints, it does just fine. I encourage you to check this script out and use
    it to easily check if I have updated this blueprint. ðŸ”— [koter84 Blueprint Update Script](https://github.com/koter84/HomeAssistant_Blueprints_Update/)


    [Community link for this blueprint](https://community.home-assistant.io/t/person-alert-blueprint/542209)
    '
  # source_url: 
  homeassistant:
    min_version: 2023.3.0
  domain: automation
  input:
    base_topic: 
      name: MQTT Topic for the printer
      description: 'This needs to be the base topic that you added into the Octoprint
        MQTT Plug-in.  Use the instruction file for details where to find it.
        '
      selector:
        text:
          multiple: false
    device_id: 
      name: Valuee of the Home Assistant Discovery device_id
      description: 'This needs to be the 
        ```Discovery settings - Node ID``` 
        that you added into the Octoprint Homeassistant Discovery Plug-in. 
        USe the instruction file for details where to find it.
        '
      selector:
        text:
          multiple: false
    device_name: 
      name: Name of the Home Assistant Discovery Device
      description: 'This needs to be the 
        ```Device settings - Device name``` 
        that you added into the Octoprint Homeassistant Discovery Plug-in. 
        USe the instruction file for details where to find it.
        '
      selector:
        text:
          multiple: false
    aux_1: 
      name: Custom GCode command for Aux Button 1
      description: 'Use this to send a custom GCode command to the printer.'
      default: 'M117 Aux1'
      selector:
        text:
          multiple: false
    aux_2: 
      name: Custom GCode command for Aux Button 2
      description: 'Use this to send a custom GCode command to the printer.'
      default: 'M117 Aux2'
      selector:
        text:
          multiple: false


# trigger_variables:
#   device_name_var: !input device_name
#   status_value: '{{ ''states.sensor.'' device_name_var ''_print_status'' }}'

trigger:
- platform: state
  entity_id: sensor.tarantulapro_print_status
  to: "Operational"

- platform: numeric_state
  entity_id: sensor.tarantulapro_tool_0_temperature
  below: "40.0"
  above: "35.0"
  for: 00:01:00

variables:
  aux1: !input aux_1
  aux2: !input aux_2
  printer_topic: !input base_topic
  dv_id: !input device_id
  dv_name: !input device_name
  ha_topic: 'homeassistant/button/{{ dv_id }}'
    # Device Parameters
  avty_t: '~mqtt'
  pl_avail: 'connected'
  pl_not_avail: 'disconnected'
  ids: '{{ dv_id }}_Blueprint'
  dname: '{{ dv_name }}'
  mf: 'SirGoodenough'
  mdl: 'Octoprint_Discovery_Helper'
  sa: 'home'
  sw: '2023-03-14'
  hw: 'https://github.com/SirGoodenough/HA_Blueprints/blob/master/Automations/Octoprint_Discovery_Helper.yaml'
  cu: 'https://community.home-assistant.io/t/script-blueprint-that-generates-3-ez-buttons-to-manage-your-tasmota-cluster/376934'
    # Button Parameters
      # Home Button
  h_c_topic: '{{ ha_topic }}/home_button/config'
  h_uniq_id: '{{ dv_id }}_home_button'
  h_bname: '{{ dv_name }}_home_button'
  h_ic: mdi:home
  h_cmd_t: '~hassControl/home'
  h_pl_prs: '["x", "y", "z"]'
      # Bed Level Button
  bl_c_topic: '{{ ha_topic }}/bed_level_button/config'
  bl_uniq_id: '{{ dv_id }}_bed_level_button'
  bl_bname: '{{ dv_name }}_bed_level_button'
  bl_ic: mdi-spirit-level
  bl_cmd_t: '~hassControl/commands'
  bl_pl_prs: G29
      # Presentation Button
  p_c_topic: '{{ ha_topic }}/present_button/config'
  p_uniq_id: '{{ dv_id }}_present_button'
  p_bname: '{{ dv_name }}_present_button'
  p_ic: mdi-gift
  p_cmd_t: '~hassControl/jog'
  p_pl_prs: '{"x": 0, "y": 200, "z": 40, "speed": 10, "absolute": true}'
      # User Aux 1 Button
  a1_c_topic: '{{ ha_topic }}/aux_1_button/config'
  a1_uniq_id: '{{ dv_id }}_aux_1_button'
  a1_bname: '{{ dv_name }}_aux_1_button'
  a1_ic: mdi-hand-extended-outline
  a1_cmd_t: '~hassControl/commands'
  a1_pl_prs: '{{ aux1 }}'
      # User aux 2 Button
  a2_c_topic: '{{ ha_topic }}/aux_2_button/config'
  a2_uniq_id: '{{ dv_id }}_aux_2_button'
  a2_bname: '{{ dv_name }}_aux_2_button'
  a2_ic: mdi-hand-extended
  a2_cmd_t: '~hassControl/commands'
  a2_pl_prs: '{{ aux2 }}'
      # Safe Shutdown Button
  sd_c_topic: '{{ ha_topic }}/safe_shutdown_button/config'
  sd_uniq_id: '{{ dv_id }}_safe_shutdown_button'
  sd_bname: '{{ dv_name }}_safe_shutdown_button'
  sd_ic: mdi-power
  sd_cmd_t: '~/blueprint/shutdown'
  sd_pl_prs: '1'



action:
- alias: Home Button Create
  service: mqtt.publish
  data:
    "topic": "{{ h_c_topic }}"
    "retain": true
    "payload": >
      { "~": "{{ printer_topic }}"
        "avty_t": "{{ avty_t }}",
        "pl_avail": "{{ pl_avail }}",
        "pl_not_avail": "{{ pl_not_avail }}",        
        "dev":
          "ids": "{{ ids }}",
          "name":  "{{ dname }}",
          "mf": "{{ mf }}",
          "mdl": "{{ mdl }}",
          "sa": "{{ sa }}",
          "sw": "{{ sw }}",
          "hw": "{{ hw }}",
          "cu": "{{ cu }}"
        },
        "name": "{{ h_bname }}",
        "uniq_id": "{{ h_uniq_id }}",
        "ic": "{{ h_ic }}",
        "cmd_t": "{{ h_cmd_t }}",
        "pl_prs": "{{ h_pl_prs }}",
      }

# "~": "octoPrint/tarantula/"
# "avty_t": "~mqtt"
# "pl_avail": "connected"
# "pl_not_avail": "disconnected"
# "name": "TarantulaPro Emergency Stop"
# "uniq_id": "7fcb2b57-4fac-42c2-93ba-1b2a4b54d366_STOP"
# "cmd_t": "~hassControl/stop"
# "dev": {
#   "ids": "7fcb2b57-4fac-42c2-93ba-1b2a4b54d366"
#   "name": "TarantulaPro"
#   "mf": "Clifford Roche"
#   "mdl": "HomeAssistant Discovery for OctoPrint"
#   "sw": "HomeAssistant Discovery for OctoPrint 3.6.2"}
# "ic": "mdi:alert-octagon"

G90 ;Absolute positioning

G1 Z40 X0 Y{machine_depth}

# Homing a printer from Lovelace

# type: entity-button
# name: Home all axes
# tap_action:
#   action: call-service
#   service: mqtt.publish
#   service_data:
#     topic: octoPrint/hassControl/home
#     payload: '["x", "y", "z"]'

# Jogging the tool from Lovelace

# type: entity-button
# name: Jog X 0.1
# tap_action:
#   action: call-service
#   service: mqtt.publish
#   service_data:
#     topic: octoPrint/hassControl/jog
#     payload: '{"x": 0.1, "speed": 1.0 }'

# Send GCODE from Lovelace

# type: entity-button
# name: Level Bed
# tap_action:
#   action: call-service
#   service: mqtt.publish
#   service_data:
#     topic: octoPrint/hassControl/commands
#     payload: "G29"

# Auto-shutdown once the printer has cooled down

# - id: "1592949271183"
#   alias: PRINTER - Ender 3 - Shutdown when cool
#   description: Shutdown the printer once is has cooled down
#   trigger:
#     - below: "40.0"
#       entity_id: sensor.ender_3_tool_0_temperature
#       for: 00:01:00
#       platform: numeric_state
#   condition:
#     - condition: not
#       conditions:
#         - condition: state
#           entity_id: binary_sensor.ender_3_printing
#           state: "On"
#   action:
#     - data: {}
#       # This is the safe shutdown script, see example below
#       service: script.1592948735781
#     - data: {}
#       entity_id: automation.printer_ender_3_shutdown_when_cool
#       service: automation.turn_off

# Safe shutdown of Raspberry Pi, then printer

# Sometimes the SD card can be thrashed when not shutting down the RPI gracefully, this automation calls system shutdown in OctoPrint, waits 2 minutes, then turns off the printer's switch.
# Caveat

# One user (thanks @pinkywafer) tested shutdown time and found it took from 5 seconds to 2+ minutes. Adjust the timeout to your needs, keep a backup if you use shorter values.

# "1592948735781":
#   alias: Ender 3 Safe Shutdown
#   sequence:
#     - device_id: 5573a438b2af4ca5b93ac58e09f21f71
#       domain: switch
#       entity_id: switch.ender_3_shutdown_system
#       type: turn_on
#     - wait_template: "{{ is_state('sensor.ender_3_print_status', 'unavailable') }}"
#     - delay: 00:02:00
#     - device_id: 179ae3ecd31f4798abe05436a3f04d43
#       domain: switch
#       entity_id: switch.ender3
#       type: turn_off
